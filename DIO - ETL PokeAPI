{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNYLMAjP+StKZxIR7qwf0IF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Esse projeto tem como objetivo, consumir(extrair) a API do PokeAPI, colocar uma tabela, usando o DataFrame Pandas(transform) e depois salvar em um arquivo .csv"],"metadata":{"id":"Y-a7hoNQq57F"}},{"cell_type":"markdown","source":["##EXTRACT"],"metadata":{"id":"TPyOEGhprYen"}},{"cell_type":"code","execution_count":19,"metadata":{"id":"PuVWuEHgqsmF","executionInfo":{"status":"ok","timestamp":1692481620051,"user_tz":180,"elapsed":266,"user":{"displayName":"Jonathan Wallace Lima Lino","userId":"08867194375887573208"}}},"outputs":[],"source":["#Extrair os dados da PokeAPI\n","import requests\n","import json\n","\n","url_pokeapi = 'https://pokeapi.co/api/v2/pokemon/'\n","\n","def get_pokeinfo(id):\n","  response = requests.get(f'{url_pokeapi}{id}')\n","  return response.json() if response.status_code== 200 else None\n","\n"]},{"cell_type":"markdown","source":["##TRANSFORM"],"metadata":{"id":"ralZ6et3xDaC"}},{"cell_type":"code","source":["#Transformar os dados da PokeAPI em um dicionário para popular um DataFrame Pandas.\n","pokemons = {'nome':[],\n","            'tipo':[],\n","            'altura':[],\n","            'peso':[]}\n","\n","for id in range(1,100):\n","  pokemon = get_pokeinfo(id)\n","  pokemons['nome'].append(pokemon['name'])\n","  tipos = ''\n","  for tipo in pokemon['types']:\n","    tipos +=  tipo['type']['name'] + \" \"\n","  pokemons['tipo'].append(tipos.strip())\n","  pokemons['altura'].append(pokemon['height'])\n","  pokemons['peso'].append(pokemon['weight'])\n"],"metadata":{"id":"dbpBH6vDsGKB","executionInfo":{"status":"ok","timestamp":1692481589944,"user_tz":180,"elapsed":27056,"user":{"displayName":"Jonathan Wallace Lima Lino","userId":"08867194375887573208"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","df_poke = pd.DataFrame(pokemons)\n","df_poke"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"lFbxddZ6tE7v","executionInfo":{"status":"ok","timestamp":1692482078358,"user_tz":180,"elapsed":3,"user":{"displayName":"Jonathan Wallace Lima Lino","userId":"08867194375887573208"}},"outputId":"41557819-a997-44f0-e2a9-9d5d949dde81"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          nome          tipo  altura  peso\n","0    bulbasaur  grass poison       7    69\n","1      ivysaur  grass poison      10   130\n","2     venusaur  grass poison      20  1000\n","3   charmander          fire       6    85\n","4   charmeleon          fire      11   190\n","..         ...           ...     ...   ...\n","94        onix   rock ground      88  2100\n","95     drowzee       psychic      10   324\n","96       hypno       psychic      16   756\n","97      krabby         water       4    65\n","98     kingler         water      13   600\n","\n","[99 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-ff58781f-60e7-437c-ab2a-6c28cf894411\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nome</th>\n","      <th>tipo</th>\n","      <th>altura</th>\n","      <th>peso</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>bulbasaur</td>\n","      <td>grass poison</td>\n","      <td>7</td>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ivysaur</td>\n","      <td>grass poison</td>\n","      <td>10</td>\n","      <td>130</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>venusaur</td>\n","      <td>grass poison</td>\n","      <td>20</td>\n","      <td>1000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>charmander</td>\n","      <td>fire</td>\n","      <td>6</td>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>charmeleon</td>\n","      <td>fire</td>\n","      <td>11</td>\n","      <td>190</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>onix</td>\n","      <td>rock ground</td>\n","      <td>88</td>\n","      <td>2100</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>drowzee</td>\n","      <td>psychic</td>\n","      <td>10</td>\n","      <td>324</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>hypno</td>\n","      <td>psychic</td>\n","      <td>16</td>\n","      <td>756</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>krabby</td>\n","      <td>water</td>\n","      <td>4</td>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>kingler</td>\n","      <td>water</td>\n","      <td>13</td>\n","      <td>600</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>99 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff58781f-60e7-437c-ab2a-6c28cf894411')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ff58781f-60e7-437c-ab2a-6c28cf894411 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ff58781f-60e7-437c-ab2a-6c28cf894411');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-186eaf88-2c64-4601-8877-627eb050fa20\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-186eaf88-2c64-4601-8877-627eb050fa20')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-186eaf88-2c64-4601-8877-627eb050fa20 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["##LOAD"],"metadata":{"id":"ISkskSWfxGOn"}},{"cell_type":"code","source":["#Salvando os dados em um arquivo poke.csv\n","df_poke.to_csv('poke.csv')"],"metadata":{"id":"sYqpkSuRtI6Z","executionInfo":{"status":"ok","timestamp":1692481925549,"user_tz":180,"elapsed":1,"user":{"displayName":"Jonathan Wallace Lima Lino","userId":"08867194375887573208"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"98tCPn6xtJgC"},"execution_count":null,"outputs":[]}]}